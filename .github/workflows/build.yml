name: Build and Push to GHCR

on:
  push:
    branches: [ main ]
    paths:
      - Dockerfile.ci
      - scripts/**
      - .github/workflows/**
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show disk usage (before)
        run: |
          df -h || true
          docker system df || true

      - name: Maximize build space on runner
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 6144
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true
          # build-mount-path can relocate docker storage; leaving default works for most cases
          # build-mount-path: /var/lib/docker

      - name: Show disk usage (after)
        run: |
          df -h || true
          docker system df || true

      - name: Set up Docker Buildx (docker-container driver)
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push CI image (no model downloads)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.ci
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
